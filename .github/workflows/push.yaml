# After successful versioning, this script runs various 
# parts of the push process
name: Push

on:
  push:
    branches:
      - main
    paths:
      - pyproject.toml

jobs:
  lint:
    runs-on: ubuntu-latest
    name: Lint
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.12
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install black
      - name: Check formatting
        run: black . -l 79 --check
  test:
    name: Build and test
    runs-on: ubuntu-latest
    permissions:
      contents: "read"
      # Required to auth against gcp
      id-token: "write"
    env:
      HUGGING_FACE_TOKEN: ${{ secrets.HUGGING_FACE_TOKEN }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Fetch all history for all tags and branches
      - name: Install uv
        uses: astral-sh/setup-uv@v5
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.12
      - uses: "google-github-actions/auth@v2"
        with:
          workload_identity_provider: "projects/322898545428/locations/global/workloadIdentityPools/policyengine-research-id-pool/providers/prod-github-provider"
          service_account: "policyengine-research@policyengine-research.iam.gserviceaccount.com"
      - name: Install package
        run: make install-uv
      - name: Download data inputs
        run: make download
        env:
          HUGGING_FACE_TOKEN: ${{ secrets.HUGGING_FACE_TOKEN }}
      - name: Build datasets
        run: make data
      - name: Save calibration log
        uses: actions/upload-artifact@v4
        with:
          name: calibration_log.csv
          path: calibration_log.csv
      - name: Run tests
        run: pytest
      - name: Upload data
        run: make upload
        env:
          HUGGING_FACE_TOKEN: ${{ secrets.HUGGING_FACE_TOKEN }}
      - name: Test documentation builds
        run: make documentation
      - name: Build Jupyter Book
        run: make documentation
      - name: Deploy documentation
        uses: JamesIves/github-pages-deploy-action@releases/v3
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          BRANCH: gh-pages  # The branch the action should deploy to.
          FOLDER: docs/_build/html
      - name: Publish a git tag
        run: ".github/publish-git-tag.sh || true"
      - name: Remove .whl files
        run: rm dist/*.whl
      - name: Publish a Python distribution to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI }}
          skip-existing: true
          verbose: true
