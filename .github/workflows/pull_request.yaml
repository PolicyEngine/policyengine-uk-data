# This workflow is used to check various parts of the
# run prior to merging:

# - The code's formatting
# - Versioning - note that this checks, but does not update
# - That the code builds successfully
# - That any automated tests pass
name: Pull request

on:
  pull_request:
    branches: [main]

jobs:
  lint:
    runs-on: ubuntu-latest
    name: Lint
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.12
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install black
      - name: Check formatting
        run: black . -l 79 --check
  test:
    name: Build and test
    runs-on: ubuntu-latest
    env:
      HUGGING_FACE_TOKEN: ${{ secrets.HUGGING_FACE_TOKEN }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
      - name: Install uv
        uses: astral-sh/setup-uv@v5

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.10'
            
      - name: Install package
        run: uv pip install .[dev] --system
      - name: Download data inputs
        run: make download
        env:
          HUGGING_FACE_TOKEN: ${{ secrets.HUGGING_FACE_TOKEN }}
      - name: Build datasets
        run: make data
        env:
          DATA_LITE: true
      - name: Run tests
        run: pytest
      - name: Test documentation builds
        run: make documentation

      - name: Check documentation build
        run: |
          for notebook in $(find docs/_build/jupyter_execute -name "*.ipynb"); do
            if grep -q '"output_type": "error"' "$notebook"; then
              echo "Error found in $notebook"
              cat "$notebook"
              exit 1
            fi
          done
